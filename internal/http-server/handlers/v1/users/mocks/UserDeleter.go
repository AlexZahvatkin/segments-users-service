// Code generated by mockery v2.33.0. DO NOT EDIT.

package mocks

import (
	context "context"

	models "github.com/AlexZahvatkin/segments-users-service/internal/models"
	mock "github.com/stretchr/testify/mock"
)

// UserDeleter is an autogenerated mock type for the UserDeleter type
type UserDeleter struct {
	mock.Mock
}

// DeleteUser provides a mock function with given fields: _a0, _a1
func (_m *UserDeleter) DeleteUser(_a0 context.Context, _a1 int64) error {
	ret := _m.Called(_a0, _a1)

	var r0 error
	if rf, ok := ret.Get(0).(func(context.Context, int64) error); ok {
		r0 = rf(_a0, _a1)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// GetUserById provides a mock function with given fields: _a0, _a1
func (_m *UserDeleter) GetUserById(_a0 context.Context, _a1 int64) (models.User, error) {
	ret := _m.Called(_a0, _a1)

	var r0 models.User
	var r1 error
	if rf, ok := ret.Get(0).(func(context.Context, int64) (models.User, error)); ok {
		return rf(_a0, _a1)
	}
	if rf, ok := ret.Get(0).(func(context.Context, int64) models.User); ok {
		r0 = rf(_a0, _a1)
	} else {
		r0 = ret.Get(0).(models.User)
	}

	if rf, ok := ret.Get(1).(func(context.Context, int64) error); ok {
		r1 = rf(_a0, _a1)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// NewUserDeleter creates a new instance of UserDeleter. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewUserDeleter(t interface {
	mock.TestingT
	Cleanup(func())
}) *UserDeleter {
	mock := &UserDeleter{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
