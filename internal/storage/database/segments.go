// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.19.1
// source: segments.sql

package database

import (
	"context"

	"github.com/AlexZahvatkin/segments-users-service/internal/models"
)

const addSegment = `-- name: AddSegment :one
INSERT INTO segments (name, created_at, updated_at, description) 
VALUES ($1, now(), now(), $2)
RETURNING name, created_at, updated_at, description
`

func (q *Queries) AddSegment(ctx context.Context, arg models.AddSegmentParams) (models.Segment, error) {
	row := q.db.QueryRowContext(ctx, addSegment, arg.Name, arg.Description)
	var i models.Segment
	err := row.Scan(
		&i.Name,
		&i.CreatedAt,
		&i.UpdatedAt,
		&i.Description,
	)
	return i, err
}

const deleteSegment = `-- name: DeleteSegment :exec
DELETE FROM segments 
WHERE name = $1
`

func (q *Queries) DeleteSegment(ctx context.Context, name string) error {
	_, err := q.db.ExecContext(ctx, deleteSegment, name)
	return err
}

const getSegmentByName = `-- name: GetSegmentByName :one
SELECT name, created_at, updated_at, description
FROM segments 
WHERE name = $1
`

func (q *Queries) GetSegmentByName(ctx context.Context, name string) (models.Segment, error) {
	row := q.db.QueryRowContext(ctx, getSegmentByName, name)
	var i models.Segment
	err := row.Scan(
		&i.Name,
		&i.CreatedAt,
		&i.UpdatedAt,
		&i.Description,
	)
	return i, err
}
