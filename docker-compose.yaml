# version: "3.7"
# services:
#   database:
#     image: postgres
#     restart: always
#     env_file:
#       - .env
#     ports:
#       - "5432:5432"
#     volumes:
#       - data:/var/lib/postgresql/data
#   server:
#     build:
#       context: .
#       dockerfile: Dockerfile
#     env_file: .env
#     depends_on:
#       - database
#     networks:
#       - default
#     ports:
#     - "8080:8080"
#     restart: on-failure
# volumes:
#   data:
version: '3.8'

services:
  server:
    container_name: server
    build: .
    # command: ./wait-for.sh db ./server
    environment:
      - TEST_DATABASE_NAME=segments_test
      - POSTGRES_HOST=host.docker.internal
      - POSTGRES_PORT=5432
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=password
      - POSTGRES_DB=segments
      - POSTGRES_SSLMODE=disable
      - ENV_TYPE=local
      - SERVER_HOST=0.0.0.0
      - SERVER_PORT=8080
      - SERVER_TIMEOUT=4s
      - SERVER_IDLE_TIMEOUT=60s
    env_file:
      - ./.env
    ports:
      - 8080:8080
    depends_on:
      - postgresql
    restart: unless-stopped

  postgresql:
    container_name: postgres
    hostname: postgres
    image: postgres:latest
    volumes:
      - ./data/db:/var/lib/postgresql/data
    ports:
      - 5432:5432
    environment:
      - POSTGRES_USER=${POSTGRES_USER:-postgres}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD:-password}
      - POSTGRES_DB=${POSTGRES_DB:-segments}

volumes:
  postgres-db: